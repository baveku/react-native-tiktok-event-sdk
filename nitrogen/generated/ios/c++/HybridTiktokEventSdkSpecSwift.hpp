///
/// HybridTiktokEventSdkSpecSwift.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include "HybridTiktokEventSdkSpec.hpp"

// Forward declaration of `HybridTiktokEventSdkSpec_cxx` to properly resolve imports.
namespace TiktokEventSdk { class HybridTiktokEventSdkSpec_cxx; }



#include <NitroModules/Promise.hpp>
#include <string>
#include <optional>
#include <unordered_map>

#include "TiktokEventSdk-Swift-Cxx-Umbrella.hpp"

namespace margelo::nitro::tiktokeventsdk {

  /**
   * The C++ part of HybridTiktokEventSdkSpec_cxx.swift.
   *
   * HybridTiktokEventSdkSpecSwift (C++) accesses HybridTiktokEventSdkSpec_cxx (Swift), and might
   * contain some additional bridging code for C++ <> Swift interop.
   *
   * Since this obviously introduces an overhead, I hope at some point in
   * the future, HybridTiktokEventSdkSpec_cxx can directly inherit from the C++ class HybridTiktokEventSdkSpec
   * to simplify the whole structure and memory management.
   */
  class HybridTiktokEventSdkSpecSwift: public virtual HybridTiktokEventSdkSpec {
  public:
    // Constructor from a Swift instance
    explicit HybridTiktokEventSdkSpecSwift(const TiktokEventSdk::HybridTiktokEventSdkSpec_cxx& swiftPart):
      HybridObject(HybridTiktokEventSdkSpec::TAG),
      _swiftPart(swiftPart) { }

  public:
    // Get the Swift part
    inline TiktokEventSdk::HybridTiktokEventSdkSpec_cxx& getSwiftPart() noexcept {
      return _swiftPart;
    }

  public:
    inline size_t getExternalMemorySize() noexcept override {
      return _swiftPart.getMemorySize();
    }
    void dispose() noexcept override {
      _swiftPart.dispose();
    }

  public:
    // Properties
    

  public:
    // Methods
    inline std::shared_ptr<Promise<bool>> initialSdk(const std::string& accessToken, const std::string& appId, const std::string& tiktokAppId) override {
      auto __result = _swiftPart.initialSdk(accessToken, appId, tiktokAppId);
      if (__result.hasError()) [[unlikely]] {
        std::rethrow_exception(__result.error());
      }
      auto __value = std::move(__result.value());
      return __value;
    }
    inline void identifyUser(const std::string& userId, const std::optional<std::string>& userName, const std::optional<std::string>& phone, const std::optional<std::string>& email) override {
      auto __result = _swiftPart.identifyUser(userId, userName, phone, email);
      if (__result.hasError()) [[unlikely]] {
        std::rethrow_exception(__result.error());
      }
    }
    inline void logout() override {
      auto __result = _swiftPart.logout();
      if (__result.hasError()) [[unlikely]] {
        std::rethrow_exception(__result.error());
      }
    }
    inline void trackEvent(const std::string& event, const std::optional<std::unordered_map<std::string, std::string>>& params) override {
      auto __result = _swiftPart.trackEvent(event, params);
      if (__result.hasError()) [[unlikely]] {
        std::rethrow_exception(__result.error());
      }
    }

  private:
    TiktokEventSdk::HybridTiktokEventSdkSpec_cxx _swiftPart;
  };

} // namespace margelo::nitro::tiktokeventsdk
