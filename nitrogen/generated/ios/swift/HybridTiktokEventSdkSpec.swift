///
/// HybridTiktokEventSdkSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridTiktokEventSdkSpec``
public protocol HybridTiktokEventSdkSpec_protocol: HybridObject {
  // Properties
  

  // Methods
  func initialSdk(accessToken: String, appId: String, tiktokAppId: String) throws -> Promise<Bool>
  func identifyUser(userId: String, userName: String?, phone: String?, email: String?) throws -> Void
  func logout() throws -> Void
  func trackEvent(event: String, params: Dictionary<String, String>?) throws -> Void
}

/// See ``HybridTiktokEventSdkSpec``
open class HybridTiktokEventSdkSpec_base {
  private weak var cxxWrapper: HybridTiktokEventSdkSpec_cxx? = nil
  public init() { }
  public func getCxxWrapper() -> HybridTiktokEventSdkSpec_cxx {
  #if DEBUG
    guard self is HybridTiktokEventSdkSpec else {
      fatalError("`self` is not a `HybridTiktokEventSdkSpec`! Did you accidentally inherit from `HybridTiktokEventSdkSpec_base` instead of `HybridTiktokEventSdkSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridTiktokEventSdkSpec_cxx(self as! HybridTiktokEventSdkSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the TiktokEventSdk HybridObject.
 * Implement this protocol to create Swift-based instances of TiktokEventSdk.
 * ```swift
 * class HybridTiktokEventSdk : HybridTiktokEventSdkSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridTiktokEventSdkSpec = HybridTiktokEventSdkSpec_protocol & HybridTiktokEventSdkSpec_base
